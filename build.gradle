apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'idea'

//apply from: 'buildConfig.groovy'

ext {
  projectName = 'petclinic'
  database = 'petclinic'
  buildNumber = System.getProperty('build') ?: 'SNAPSHOT'
  nexusHost = 'http://192.168.33.10:8081'
  uploadRepository = System.getProperty("uploadRepository") ?: "staging"
  downloadRepository = System.getProperty("downloadRepository") ?: "ci_builds"
}

version = "1.0.0-${buildNumber}"
group = "org.springframework.samples"


uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "${nexusHost}/nexus/content/repositories/${uploadRepository}") {
        authentication(userName: "admin", password: "admin123")
      }
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.2'
}

war {
  baseName = projectName
}

task dropAndRecreateDB << {
  runSqlScript('dropDB.sql')
  tasks.initDB.execute()
}

task initDB << {
  runSqlScript('initDB.sql')
}

task populateDB(dependsOn: [dropAndRecreateDB]) << {
  runSqlScript('populateDB.sql', database)
}

task migrateDB(dependsOn: initDB) << {
  ant.taskdef(name: 'dbdeploy',
              classname: 'com.dbdeploy.AntTarget',
              classpath: (configurations.dbdeploy + configurations.mysql).asPath)
  ant.dbdeploy(driver: "com.mysql.jdbc.Driver",
               url: "jdbc:mysql://${databaseHost}/${database}",
               userid: dbaUsername,
               password: dbaPassword,
               dir: "db")
}

task populateAndMigrateDB << {
  tasks.populateDB.execute()
  tasks.migrateDB.execute()
}

test {
  dependsOn populateAndMigrateDB
}

def runSqlScript(filename, database = "") {
  ant.sql(
    userid: "${dbaUsername}",
    url: "jdbc:mysql://${databaseHost}/${database}",
    password: "${dbaPassword}",
    driver: "com.mysql.jdbc.Driver",
    classpath: configurations.mysql.asPath,
    src: "src/main/resources/db/mysql/${filename}")
}

task deploy(dependsOn: migrateDB) << {

}

repositories {
  mavenCentral()
  maven { url "http://repository.springsource.com/maven/bundles/release" }
  maven { url "http://repository.springsource.com/maven/bundles/external" }
  maven { url "http://repository.springsource.com/maven/bundles/milestone" }
  maven { url "http://repository.springsource.com/maven/bundles/snapshot" }
}

configurations {
  provided
  mysql
  dbdeploy
  antScpTask
}

sourceSets {
  main.compileClasspath += configurations.provided
  test.compileClasspath += configurations.provided
  test.runtimeClasspath += configurations.provided

  test.runtimeClasspath += configurations.mysql
  main.runtimeClasspath += configurations.mysql
}


def springVersion = '3.0.0.RELEASE'
def slf4jVersion = '1.5.6'

dependencies {

  // Spring
  compile "org.springframework:org.springframework.context:${springVersion}"
  compile "org.springframework:org.springframework.orm:${springVersion}"
  compile "org.springframework:org.springframework.oxm:${springVersion}"
  compile "org.springframework:org.springframework.web.servlet:${springVersion}"
  compile "org.springframework:org.springframework.aspects:${springVersion}"

  // AspectJ
  compile "org.aspectj:com.springsource.org.aspectj.weaver:1.6.8.RELEASE"

  // Logging
  compile "org.slf4j:com.springsource.slf4j.api:${slf4jVersion}"
  runtime "org.slf4j:com.springsource.slf4j.org.apache.commons.logging:${slf4jVersion}"
  runtime "org.slf4j:com.springsource.slf4j.log4j:${slf4jVersion}"
  runtime "org.apache.log4j:com.springsource.org.apache.log4j:1.2.15"
  
  // DataSource
  runtime "org.apache.commons:com.springsource.org.apache.commons.dbcp:1.2.2.osgi"
  runtime "org.apache.commons:com.springsource.org.apache.commons.pool:1.5.3"
  runtime "org.hsqldb:com.springsource.org.hsqldb:1.8.0.9"

  // Hibernate
  compile "org.hibernate:com.springsource.org.hibernate:3.3.2.GA"

  // JPA
  compile "javax.persistence:com.springsource.javax.persistence:1.0.0"

  // Toplink JPA Provider
  compile "com.oracle.toplink.essentials:com.springsource.oracle.toplink.essentials:2.0.0.b41-beta2"
  
  // Hibernate JPA Provider
  compile "org.hibernate:com.springsource.org.hibernate.ejb:3.4.0.GA"
  compile "org.hibernate:com.springsource.org.hibernate.annotations:3.4.0.GA"
  
  // Open JPA Provider
  compile "org.apache.openjpa:com.springsource.org.apache.openjpa:1.1.0"

  // Servlet
  provided "javax.servlet:com.springsource.javax.servlet:2.5.0"
  provided "javax.servlet:com.springsource.javax.servlet.jsp:2.1.0"
  compile "javax.servlet:com.springsource.javax.servlet.jsp.jstl:1.2.0"
  compile "org.apache.taglibs:com.springsource.org.apache.taglibs.standard:1.1.2"
  
  // Rome RSS
  compile "com.sun.syndication:com.springsource.com.sun.syndication:1.0.0"
  runtime "org.jdom:com.springsource.org.jdom:1.1.0"
          
  // JAXB
  provided "javax.xml.bind:com.springsource.javax.xml.bind:2.1.7"
  
  // Test dependencies
  testCompile "org.junit:com.springsource.org.junit:4.7.0"
  testCompile "org.springframework:org.springframework.test:${springVersion}"
  testCompile "javax.transaction:com.springsource.javax.transaction:1.1.0"

  // Mysql
  mysql "com.mysql.jdbc:com.springsource.com.mysql.jdbc:5.1.6"

  // DB Deploy
  dbdeploy fileTree(dir: 'libs', include: 'dbdeploy-*.jar')

}

