apply plugin: 'java'
apply plugin: 'cargo'

def buildNumber = System.getProperty("gitCommit") ?: "SNAPSHOT"
version = "1.0.0-${buildNumber}"

loadConfig()

def loadConfig() {
  def environment = System.getProperty("environment") ?: "local"
  def config = new ConfigSlurper(environment).parse(new File("build-config.groovy").toURL())
  if (config.isEmpty()) throw new InvalidUserDataException("Invalid environment: ${environment}")
  ext.config = config
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.2'
}

war {
  baseName = "petclinic"
}

task dropAndCreateDB << {
  runSqlScript('dropDB.sql')
  runSqlScript('initDB.sql')
}

task initDB << {
  runSqlScript('initDB.sql')
}

task populateDB(dependsOn: dropAndCreateDB) << {
  runSqlScript('populateDB.sql', databaseName)
}

test.dependsOn populateDB

def runSqlScript(filename, database = "") {
  ant.sql(
    userid: "${config.db.dba.username}",
    url: "jdbc:mysql://${config.db.host}/${database}",
    password: "${config.db.dba.password}",
    driver: "com.mysql.jdbc.Driver",
    classpath: configurations.runtime.asPath,
    src: "src/main/resources/db/mysql/${filename}")
}

buildscript {
  repositories {
    add(new org.apache.ivy.plugins.resolver.URLResolver()) {
      name = 'GitHub'
      addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
    }
  }
  dependencies {
    classpath 'bmuschko:gradle-cargo-plugin:0.3'
  }
}

cargo {
  containerId = 'tomcat6x'
  port = 8080
  context = 'petclinic'
  remote {
    hostname = "${config.tomcat.host}"
    username = "${config.tomcat.username}"
    password = "${config.tomcat.password}"
  }
}

task deploy(dependsOn: [populateDB]) << {
  tasks.cargoRedeployRemote.execute()
}


repositories {
  mavenCentral()
  maven { url "http://repository.springsource.com/maven/bundles/release" }
  maven { url "http://repository.springsource.com/maven/bundles/external" }
  maven { url "http://repository.springsource.com/maven/bundles/milestone" }
  maven { url "http://repository.springsource.com/maven/bundles/snapshot" }
}

configurations {
  provided
}

sourceSets {
  main.compileClasspath += configurations.provided
  test.compileClasspath += configurations.provided
  test.runtimeClasspath += configurations.provided
}


def springVersion = '3.0.0.RELEASE'
def slf4jVersion = '1.5.6'

dependencies {

  // Spring
  compile "org.springframework:org.springframework.context:${springVersion}"
  compile "org.springframework:org.springframework.orm:${springVersion}"
  compile "org.springframework:org.springframework.oxm:${springVersion}"
  compile "org.springframework:org.springframework.web.servlet:${springVersion}"
  compile "org.springframework:org.springframework.aspects:${springVersion}"

  // AspectJ
  compile "org.aspectj:com.springsource.org.aspectj.weaver:1.6.8.RELEASE"

  // Logging
  compile "org.slf4j:com.springsource.slf4j.api:${slf4jVersion}"
  runtime "org.slf4j:com.springsource.slf4j.org.apache.commons.logging:${slf4jVersion}"
  runtime "org.slf4j:com.springsource.slf4j.log4j:${slf4jVersion}"
  runtime "org.apache.log4j:com.springsource.org.apache.log4j:1.2.15"
  
  // DataSource
  runtime "org.apache.commons:com.springsource.org.apache.commons.dbcp:1.2.2.osgi"
  runtime "org.apache.commons:com.springsource.org.apache.commons.pool:1.5.3"
  runtime "org.hsqldb:com.springsource.org.hsqldb:1.8.0.9"
  runtime "com.mysql.jdbc:com.springsource.com.mysql.jdbc:5.1.6"
  
  // Hibernate
  compile "org.hibernate:com.springsource.org.hibernate:3.3.2.GA"

  // JPA
  compile "javax.persistence:com.springsource.javax.persistence:1.0.0"

  // Toplink JPA Provider
  compile "com.oracle.toplink.essentials:com.springsource.oracle.toplink.essentials:2.0.0.b41-beta2"
  
  // Hibernate JPA Provider
  compile "org.hibernate:com.springsource.org.hibernate.ejb:3.4.0.GA"
  compile "org.hibernate:com.springsource.org.hibernate.annotations:3.4.0.GA"
  
  // Open JPA Provider
  compile "org.apache.openjpa:com.springsource.org.apache.openjpa:1.1.0"

  // Servlet
  provided "javax.servlet:com.springsource.javax.servlet:2.5.0"
  provided "javax.servlet:com.springsource.javax.servlet.jsp:2.1.0"
  compile "javax.servlet:com.springsource.javax.servlet.jsp.jstl:1.2.0"
  compile "org.apache.taglibs:com.springsource.org.apache.taglibs.standard:1.1.2"
  
  // Rome RSS
  compile "com.sun.syndication:com.springsource.com.sun.syndication:1.0.0"
  runtime "org.jdom:com.springsource.org.jdom:1.1.0"
          
  // JAXB
  provided "javax.xml.bind:com.springsource.javax.xml.bind:2.1.7"
  
  // Test dependencies
  testCompile "org.junit:com.springsource.org.junit:4.7.0"
  testCompile "org.springframework:org.springframework.test:${springVersion}"
  testCompile "javax.transaction:com.springsource.javax.transaction:1.1.0"

  // Cargo
  cargo 'org.codehaus.cargo:cargo-core-uberjar:1.1.1', 'org.codehaus.cargo:cargo-ant:1.1.1', 'jaxen:jaxen:1.1.1'
}

